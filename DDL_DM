SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS FAT_STUDENTS;
DROP TABLE IF EXISTS DIM_COURSES;
DROP TABLE IF EXISTS DIM_SESSIONS;
DROP TABLE IF EXISTS DIM_STUDENT_FOLLOW_SUBJECT;
DROP TABLE IF EXISTS DIM_SUBJECTS;
DROP TABLE IF EXISTS DIM_SUBSCRIPTIONS;
DROP TABLE IF EXISTS DIM_UNIVERSITIES;
SET FOREIGN_KEY_CHECKS = 1;

CREATE TABLE FAT_STUDENTS (
    SK_STUDENT SERIAL PRIMARY KEY,
    ID VARCHAR(100) NOT NULL,
    REGISTERED_DATA DATE NOT NULL,
    STATE VARCHAR(30) NOT NULL,
    CITY VARCHAR(30) NOT NULL,
    UNIVERSITY_ID INTEGER NOT NULL,
    COURSE_ID INTEGER NOT NULL,
    SIGNUP_SOURCE VARCHAR(20) NOT NULL,
    CHANGE_DATE DATE NULL
);

CREATE TABLE DIM_COURSES (
    SK_COURSES SERIAL PRIMARY KEY,
    ID INTEGER NOT NULL,
    NAME VARCHAR(30) NOT NULL,
    CHANGE_DATE DATE NULL
);

CREATE TABLE DIM_SESSIONS (
    STUDENT_ID VARCHAR(100) NOT NULL,
    START_TIME DATE NOT NULL,
    STUDENT_CLIENT VARCHAR(20) NOT NULL,
    PRIMARY KEY (STUDENT_ID)
);

CREATE TABLE DIM_STUDENT_FOLLOW_SUBJECT (
    STUDENT_ID VARCHAR(100) NOT NULL,
    SUBJECT_ID INTEGER NOT NULL,
    FOLLOW_DATE DATE NOT NULL,
    PRIMARY KEY (STUDENT_ID)
);

CREATE TABLE DIM_SUBJECTS (
    SK_SUBJECTS SERIAL PRIMARY KEY,
    ID INTEGER NOT NULL,
    NAME VARCHAR(30) NOT NULL,
    CHANGE_DATE DATE NULL
);

CREATE TABLE DIM_SUBSCRIPTIONS (
    STUDENT_ID VARCHAR(100) NOT NULL,
    PAYMENT_DATE DATE NOT NULL,
    PLAN_TYPE VARCHAR(10) NOT NULL,
    PRIMARY KEY (STUDENT_ID)
);

CREATE TABLE DIM_UNIVERSITIES (
    SK_UNIVERSITIES SERIAL PRIMARY KEY,
    ID INTEGER NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    CHANGE_DATE DATE NULL
);

ALTER TABLE FAT_STUDENTS ADD FOREIGN KEY (UNIVERSITY_ID) REFERENCES DIM_UNIVERSITIES(ID);
ALTER TABLE FAT_STUDENTS ADD FOREIGN KEY (COURSE_ID) REFERENCES DIM_COURSES(ID);
ALTER TABLE DIM_STUDENT_FOLLOW_SUBJECT ADD FOREIGN KEY (SUBJECT_ID) REFERENCES DIM_SUBJECTS(ID);